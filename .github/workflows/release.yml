name: Semantic Release

on:
  workflow_run:
    workflows: ["Consolidated CI/CD & Frontend Automation"]
    types:
      - completed
    branches:
      - master
  workflow_dispatch: # Add manual trigger for testing

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NODE_VERSION: "20"

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false # Don't cancel releases in progress
    # Only run if CI workflow completed successfully or manually triggered
    # Skip if triggered by our own release commits to prevent cascading releases
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'success' &&
       !contains(github.event.workflow_run.head_commit.message, 'chore(release):'))
    permissions:
      id-token: write # For provenance
      contents: write # For creating releases
      issues: write # For creating issues
      pull-requests: write # For creating PRs
      packages: write # For container registry
      attestations: write # For build provenance
      actions: write # For workflow dispatch
      checks: write # For status checks
    outputs:
      released: ${{ steps.semantic.outputs.released }}
      version: ${{ steps.semantic.outputs.version }}
      tag: ${{ steps.semantic.outputs.tag }}
      image-tag: ${{ steps.container-outputs.outputs.image-tag }}
      image-digest: ${{ steps.container-outputs.outputs.image-digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for semantic release
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Container Build & Publish - Only if release was created
      - name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract container metadata
        if: steps.semantic.outputs.new_release_published == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.semantic.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.semantic.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ steps.semantic.outputs.new_release_version }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push container image
        if: steps.semantic.outputs.new_release_published == 'true'
        id: container
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: production

      - name: Generate container attestation
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.container.outputs.digest }}
          push-to-registry: true

      - name: Set container outputs
        if: steps.semantic.outputs.new_release_published == 'true'
        id: container-outputs
        run: |
          echo "image-tag=${{ fromJSON(steps.meta.outputs.json).tags[0] }}" >> $GITHUB_OUTPUT
          echo "image-digest=${{ steps.container.outputs.digest }}" >> $GITHUB_OUTPUT

      - name: Update Umbrella Repository
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.UMBRELLA_REPO_TOKEN }}
          repository: zachatkinson/csfrace-scrape
          event-type: frontend-updated
          client-payload: |
            {
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "version": "${{ steps.semantic.outputs.new_release_version }}",
              "release_url": "https://github.com/${{ github.repository }}/releases/tag/v${{ steps.semantic.outputs.new_release_version }}"
            }

      - name: Create release success summary
        if: success()
        run: |
          echo "## ✅ Semantic Release Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Release created successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Release Details" >> $GITHUB_STEP_SUMMARY
          echo "Check the [Releases page](https://github.com/${{ github.repository }}/releases) for the new release." >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.semantic.outputs.new_release_published }}" == "true" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🐳 Container Image" >> $GITHUB_STEP_SUMMARY
            echo "**Version:** \`${{ steps.semantic.outputs.new_release_version }}\`" >> $GITHUB_STEP_SUMMARY
            echo "**Image:** \`${{ steps.container-outputs.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY
            echo "**Digest:** \`${{ steps.container-outputs.outputs.image-digest }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Container image published to GitHub Container Registry with semantic version tags." >> $GITHUB_STEP_SUMMARY
          fi
