---
/**
 * JobModal - DRY/SOLID Component Implementation
 * Single Responsibility: Render job detail modal with proper accessibility
 * Following DRY principle by using BaseModal foundation
 * Open/Closed: Extends BaseModal behavior without modification
 */

// =============================================================================
// IMPORTS & TYPES
// =============================================================================
import type { IJobModalProps } from '../types/dashboard.types';
import { DASHBOARD_CSS_CLASSES } from '../types/dashboard.types';
import BaseModal from '../../common/BaseModal.astro';

// =============================================================================
// COMPONENT PROPS
// =============================================================================
export interface Props extends IJobModalProps {}

const {
  isOpen = false,
  jobId
} = Astro.props;
---

<!-- =============================================================================
     JOB DETAIL MODAL - DRY Implementation using BaseModal
     Single Responsibility: Job-specific content only
     ============================================================================= -->

<BaseModal
  id="job-modal"
  closeButtonId="job-modal-close"
  maxWidth="max-w-4xl"
  backdropBlur={true}
  className={isOpen ? '' : 'hidden'}
>
  <div
    class="glass-card p-6"
    data-component="job-modal"
    data-modal-open={isOpen}
    data-job-id={jobId}
    role="main"
    aria-labelledby="modal-title"
    aria-describedby="modal-description"
  >

    <!-- =============================================================
         MODAL HEADER (Single Responsibility)
         ============================================================= -->
    <div class="flex items-center justify-between mb-6">
      <h2
        id="modal-title"
        class="text-2xl font-bold text-white"
      >
        Job Details
      </h2>
    </div>

    <!-- =============================================================
         MODAL CONTENT (Single Responsibility)
         ============================================================= -->
    <div
      id="job-details-content"
      data-job-content
      aria-live="polite"
      aria-busy="false"
    >
      <!-- Job details will be populated by Astro script + nano stores -->
      <div class="text-center py-8" data-loading-placeholder>
        <div class={DASHBOARD_CSS_CLASSES.LOADING_SPINNER + " mx-auto mb-4"}></div>
        <p class="text-white/70">Loading job details...</p>
      </div>
    </div>
  </div>
</BaseModal>

<!-- =============================================================================
     MODAL SCRIPT - DRY Implementation using BaseModalManager
     Following SOLID principles with base modal behavior
     ============================================================================= -->
<script type="module">
  import { BaseModalManager } from '/src/scripts/baseModalManager';

  // Job Modal Manager extending base functionality
  class JobModalManager extends BaseModalManager {
    constructor() {
      super({
        modalId: 'job-modal',
        closeOnEscape: true,
        closeOnBackdrop: true
      });
    }

    // Job-specific initialization
    setupModalSpecificHandlers() {
      // Handle job data loading when modal opens
      this.config.onOpen = () => {
        this.loadJobDetails();
      };
    }

    // Load job details from nano store
    async loadJobDetails() {
      const jobId = this.modal?.dataset.jobId;
      if (!jobId) return;

      const contentEl = document.getElementById('job-details-content');
      if (!contentEl) return;

      try {
        // Job details will be loaded from nano store
        // This will be implemented when we add SSE + nano stores
        console.log('Loading job details for job:', jobId);
      } catch (error) {
        console.error('Failed to load job details:', error);
      }
    }
  }

  // Initialize job modal manager
  const jobModalManager = new JobModalManager();
  jobModalManager.init();

  // Expose for external access
  (window as any).jobModalManager = jobModalManager;
</script>